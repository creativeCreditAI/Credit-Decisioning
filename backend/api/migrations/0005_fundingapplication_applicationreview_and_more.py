# Generated by Django 5.2.4 on 2025-07-30 11:19

import api.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_mpesatransaction_ai_insights_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FundingApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=200)),
                ('business_description', models.TextField(help_text='Brief description of your business', max_length=1000)),
                ('industry', models.CharField(choices=[('fintech', 'Financial Technology'), ('healthtech', 'Health Technology'), ('edtech', 'Education Technology'), ('agritech', 'Agriculture Technology'), ('logistics', 'Logistics & Supply Chain'), ('ecommerce', 'E-commerce'), ('saas', 'Software as a Service'), ('marketplace', 'Marketplace'), ('social', 'Social Impact'), ('clean_energy', 'Clean Energy'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('other', 'Other')], max_length=50)),
                ('business_stage', models.CharField(choices=[('idea', 'Idea Stage'), ('prototype', 'Prototype/MVP'), ('beta', 'Beta Testing'), ('early_revenue', 'Early Revenue'), ('growth', 'Growth Stage'), ('expansion', 'Expansion'), ('mature', 'Mature')], max_length=50)),
                ('funding_stage', models.CharField(choices=[('pre_seed', 'Pre-Seed'), ('seed', 'Seed'), ('series_a', 'Series A'), ('series_b', 'Series B'), ('series_c', 'Series C'), ('bridge', 'Bridge'), ('other', 'Other')], max_length=50)),
                ('funding_amount_requested', models.DecimalField(decimal_places=2, help_text='Amount in KES', max_digits=15)),
                ('equity_offered', models.DecimalField(decimal_places=2, help_text='Percentage of equity offered', max_digits=5)),
                ('use_of_funds', models.TextField(help_text='How will you use the funding?', max_length=1000)),
                ('instagram_profile', models.URLField(blank=True, help_text='Instagram profile URL', null=True)),
                ('youtube_profile', models.URLField(blank=True, help_text='YouTube channel URL', null=True)),
                ('portfolio_website', models.URLField(blank=True, help_text='Company website or portfolio', null=True)),
                ('linkedin_profile', models.URLField(blank=True, help_text='LinkedIn profile URL', null=True)),
                ('team_size', models.PositiveIntegerField(default=1)),
                ('founder_experience', models.TextField(help_text="Founder's relevant experience", max_length=1000)),
                ('monthly_revenue', models.DecimalField(decimal_places=2, default=0, help_text='Current monthly revenue', max_digits=12)),
                ('monthly_burn_rate', models.DecimalField(decimal_places=2, default=0, help_text='Monthly expenses', max_digits=12)),
                ('runway_months', models.PositiveIntegerField(default=0, help_text='Current runway in months')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('due_diligence', 'Due Diligence'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('on_hold', 'On Hold')], default='draft', max_length=20)),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('creditworthiness_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI-calculated creditworthiness score', max_digits=5, null=True)),
                ('business_viability_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI-calculated business viability score', max_digits=5, null=True)),
                ('risk_assessment', models.JSONField(blank=True, default=dict, help_text='AI risk assessment results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funding_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_model_score', models.PositiveIntegerField(blank=True, help_text='1-10 rating', null=True)),
                ('market_opportunity_score', models.PositiveIntegerField(blank=True, help_text='1-10 rating', null=True)),
                ('team_strength_score', models.PositiveIntegerField(blank=True, help_text='1-10 rating', null=True)),
                ('financial_health_score', models.PositiveIntegerField(blank=True, help_text='1-10 rating', null=True)),
                ('scalability_score', models.PositiveIntegerField(blank=True, help_text='1-10 rating', null=True)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, help_text='Overall score out of 10', max_digits=4, null=True)),
                ('decision', models.CharField(blank=True, choices=[('approve', 'Approve'), ('reject', 'Reject'), ('conditional', 'Conditional Approval'), ('more_info', 'Request More Information')], max_length=20, null=True)),
                ('strengths', models.TextField(blank=True, help_text='Application strengths')),
                ('weaknesses', models.TextField(blank=True, help_text='Areas of concern')),
                ('recommendations', models.TextField(blank=True, help_text='Recommendations for improvement')),
                ('internal_notes', models.TextField(blank=True, help_text='Internal reviewer notes')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('requires_info', 'Requires Additional Information')], default='pending', max_length=20)),
                ('review_started_at', models.DateTimeField(auto_now_add=True)),
                ('review_completed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='api.fundingapplication')),
            ],
        ),
        migrations.CreateModel(
            name='FundingApplicationMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('pitch_video', 'Pitch Video'), ('demo_video', 'Product Demo Video'), ('presentation', 'Presentation Slides'), ('prototype_images', 'Prototype Images'), ('team_photo', 'Team Photo'), ('product_screenshots', 'Product Screenshots'), ('other', 'Other')], max_length=50)),
                ('file', models.FileField(upload_to=api.models.upload_pitch_media)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=api.models.upload_pitch_media)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds for videos', null=True)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('processing_status', models.CharField(choices=[('uploaded', 'Uploaded'), ('processing', 'Processing'), ('ready', 'Ready'), ('failed', 'Failed')], default='uploaded', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_files', to='api.fundingapplication')),
            ],
        ),
        migrations.CreateModel(
            name='FundingApplicationNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('internal', 'Internal Note'), ('communication', 'Communication Log'), ('meeting', 'Meeting Notes'), ('due_diligence', 'Due Diligence'), ('follow_up', 'Follow-up Required')], default='internal', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='api.fundingapplication')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FundingApplicationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('balance_sheet', 'Balance Sheet'), ('income_statement', 'Income Statement'), ('cash_flow', 'Cash Flow Statement'), ('tax_returns', 'Tax Returns'), ('business_plan', 'Business Plan'), ('financial_projections', 'Financial Projections'), ('bank_statements', 'Bank Statements'), ('incorporation_cert', 'Certificate of Incorporation'), ('kra_pin', 'KRA PIN Certificate'), ('business_permit', 'Business Permit'), ('pitch_deck', 'Pitch Deck'), ('product_demo', 'Product Demo'), ('market_research', 'Market Research'), ('legal_agreements', 'Legal Agreements'), ('other', 'Other')], max_length=50)),
                ('file', models.FileField(upload_to=api.models.upload_business_document)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('description', models.CharField(blank=True, help_text='Optional description', max_length=500)),
                ('ai_analysis_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('ai_extracted_data', models.JSONField(blank=True, default=dict, help_text='AI-extracted financial data')),
                ('ai_insights', models.JSONField(blank=True, default=dict, help_text='AI-generated insights from document')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='api.fundingapplication')),
            ],
            options={
                'unique_together': {('application', 'document_type', 'original_filename')},
            },
        ),
    ]
